from Crypto.Util.number import getStrongPrime, getRandomNBitInteger, bytes_to_long


p = getStrongPrime(1024)
flag = b"neimark{REDACTEDREDACTEDREDACTEDREDACTED}"

class Epsilon:
    def __init__(self, a, b):
        self.a, self.b = a, b
    
    def __add__(self, other):
        if type(other) == int: other = Epsilon(other, 0)
        return Epsilon(self.a + other.a, self.b + other.b)
    def __radd__(self, other): return self.__add__(other)

    def __mul__(self, other):
        if type(other) == int: other = Epsilon(other, 0)
        return Epsilon(self.a * other.a, self.a * other.b + other.a * self.b)
    def __rmul__(self, other): return self.__mul__(other)

    def __mod__(self, other: int):
        return Epsilon(self.a % other, self.b % other)
    
    def __repr__(self): return f"{self.a} + {self.b}ɛ"

    @staticmethod
    def getRandomBits(n):
        return Epsilon(getRandomNBitInteger(n), getRandomNBitInteger(n))

def powm(b, e, m):
    r = 1
    while e > 1:
        if e & 1:
            r = (r * b) % m
        b = (b * b)  % m
        e >>= 1
    return (b * r) % m

ɛ = Epsilon(0, 1)
g = ɛ.getRandomBits(1024)
m = bytes_to_long(flag)
assert m < p
A = powm(g, m, p)

print(f"{p = }")
print(f"{g = }")
print(f"{A = }")

# p = 148785515047518105268386867425163415821675122856518158874205776110671270025769184287866714384777763012222868719863294021183008740631264726337697817373031783361934907238048448363722713407071373472709351887639872378842676650433092149224352107210641510814202183582076581623085522215336314922181804048284806152681
# g = 155443383469250078875541698580154159780841213818228648598511034420711590160604937796656476597531479884650372317231764180832269900669717906848064392335465223972451745346364020539433484749215836576812837141028349170480293417598863797353532319025874007466974601265358031270662084336929162637572600257269857877393 + 123191022213597356675139229241528622836692341447457804032899448448392925953921743086352759478644725662596779324885734919080603594176539815157428452185444046254593069353609379679532578849549421551136661279653846697146465401019342550608848665493437298788097830929792038776282875509439876161257567362751653458195ɛ
# A = 65396622139736167476600869914429894184010734568304609823204216288243445040128627284066649954839044345281027762556524052912579847340035518254190737075544526639676304293807720181889447699668073128831152076712278949047571684024285281216279831016011757444173711714770466473118994425358422936959429542369727441441 + 125494827221376866507841741839804011986986936245669651881030709786022022249911452866884284901465191104738345543996885498082045764493722869027219382497474766710376156631914674316401501613436612281640407326261772270261237366452342540490861727691501891576590412782191533410506857528074246313561895290305298760836ɛ
